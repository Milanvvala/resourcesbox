generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Type {
  TOOL
  RESOURCE
  COURSE
}

model Product {
  id          Int     @id @default(autoincrement())
  slug        String  @unique
  title       String
  description String?
  markdown    String?
  availableOn Int?
  badge       String?
  price       Int?
  logoUrl     String?
  visitLink   String?
  published   Boolean @default(false)

  type Type @default(TOOL)
  // tags Tags[]

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map("products")
}

model Category {
  id    Int     @id @default(autoincrement())
  rank  Int?
  label String  @unique
  link  String?
  icon  String?

  products Product[]
}



// model Tags {
//   id   Int     @id @default(autoincrement())
//   tag  String
//   link String?
//   icon String?


// add "subscription Subscription?" into user
// model Subscription {
//   userId                 String    @unique
//   stripeCustomerId       String    @unique @map(name: "stripe_customer_id")
//   stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
//   stripePriceId          String?   @map(name: "stripe_price_id")
//   stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user User @relation(fields: [userId], references: [id])

//   @@id([userId, stripeCustomerId])
// }
